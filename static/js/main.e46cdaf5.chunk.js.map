{"version":3,"sources":["Movie.js","App4.js","index.js"],"names":["Movie","id","title","year","summary","medium_cover_image","genres","className","src","alt","map","genre","idx","slice","App4","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6RAwBeA,MApBf,YAAyE,EAAxDC,GAAyD,IAArDC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,mBAAoBC,EAAU,EAAVA,OAC3D,OACI,sBAAKC,UAAU,cAAf,UACI,qBAAKC,IAAKH,EAAoBI,IAAKP,EAAOA,MAAOA,IACjD,qBAAIK,UAAU,eAAd,UAA8BL,EAAM,uBAAMK,UAAU,cAAhB,cAAgCJ,EAAhC,UACpC,oBAAII,UAAU,gBAAd,SAA+BD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAAiB,oBAAIL,UAAU,eAAd,SAAwCI,GAANC,QAC7F,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,aCiCGC,G,kNApCXC,MAAQ,CACJC,WAAW,EACXC,OAAQ,I,EAGZC,U,sBAAY,8BAAAC,EAAA,sEAOqCC,IAAMC,IAAI,yDAP/C,gBAOgBJ,EAPhB,EAOAK,KAAQA,KAAQL,OACxB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAR3B,2C,kEAaRQ,KAAKN,c,+BAGC,IAAD,EACyBM,KAAKT,MAA3BC,EADH,EACGA,UAAWC,EADd,EACcA,OAEnB,OAAO,8BAKFD,EAAY,6BAAqBC,EAAOP,KAAI,SAAAe,GAAK,OAC9C,cAAC,EAAD,CAAsBxB,GAAIwB,EAAMxB,GAAIC,MAAOuB,EAAMvB,MAAOC,KAAMsB,EAAMtB,KAAMC,QAASqB,EAAMrB,QAASC,mBAAoBoB,EAAMpB,mBAAoBC,OAAQmB,EAAMnB,QAAlJmB,EAAMxB,a,GAhCfyB,IAAMC,YCIzBC,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.e46cdaf5.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"./Movie.css\"\n\nfunction Movie({ id, title, year, summary, medium_cover_image, genres }) {\n    return (\n        <div className=\"movie__data\">\n            <img src={medium_cover_image} alt={title} title={title} />\n            <h3 className=\"movie__title\">{title}<span className=\"movie__year\">({year})</span></h3>\n            <ul className=\"movie__genres\">{genres.map((genre, idx) => (<li className=\"movie__genre\" key={idx}>{genre}</li>))}</ul>\n            <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\n        </div>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    medium_cover_image: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Movie;","import React from \"react\"\nimport axios from \"axios\"\nimport Movie from \"./Movie\"\nimport \"./App.css\"\n\nclass App4 extends React.Component {\n\n    state = {\n        isLoading: true,\n        movies: []\n    };\n\n    getMovies = async () => {\n        //axios : 브라우저와 http 통신을 하기 위한 라이브러리\n        //await : axios 호출이 완료될 때 까지 기다려야 한다. 이 떄 await 키워드는 반드시 async 키워드와 함께 써야 함\n\n        //https://yts.mx/api#list_movies\n        //const movies = await axios.get(\"https://yts.mx/api/v2/list_movies.json\");\n        //console.log(movies.data.data.movies);\n        const { data: { data: { movies } } } = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n        this.setState({ movies, isLoading: false });\n\n    };\n\n    componentDidMount() {\n        this.getMovies();\n    }\n\n    render() {\n        const { isLoading, movies } = this.state;\n\n        return <div>\n            {/* movie=>() 로 할 땐 return 안해도 되고, {}로 감싸면 return statement가 반드시 있어야 함 */}\n            {/* {isLoading ? \"is now loading...🔥\" : movies.map(movie => {\n                return <Movie key={movie.id} id={movie.id} title={movie.title} year={movie.year} summary={movie.summary} medium_cover_image={movie.medium_cover_image} />\n            })} */}\n            {isLoading ? \"Now Loading...🔥\" : movies.map(movie => (\n                <Movie key={movie.id} id={movie.id} title={movie.title} year={movie.year} summary={movie.summary} medium_cover_image={movie.medium_cover_image} genres={movie.genres} />\n            ))}\n        </div>;\n    }\n}\n\nexport default App4;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import App from './App2';\nimport App4 from './App4';\n\n\n//리액트 애플리케이션은 하나에 한개의 컴포넌트만 rendering할 수 있기때문에 <App /><Potatp /> 로 사용할 수 없음\n// ReactDOM.render(<App2 />, document.getElementById('root'));\nReactDOM.render(<App4 />, document.getElementById('root'));\n\n"],"sourceRoot":""}