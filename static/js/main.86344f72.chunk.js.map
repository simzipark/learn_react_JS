{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","title","year","summary","medium_cover_image","genres","to","pathname","state","className","src","alt","map","genre","idx","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","React","Component","About","Detail","props","location","history","undefined","push","console","log","Navigation","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"4PAsCeA,MAlCf,YAA0E,IAAzDC,EAAwD,EAAxDA,GAAIC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,mBAAoBC,EAAU,EAAVA,OAC3D,OACI,8BACI,cAAC,IAAD,CAAMC,GAAI,CAENC,SAAS,WAAD,OAAaP,GACrBQ,MAAO,CACHN,OACAD,QACAE,UACAC,qBACAC,WARR,SAWI,sBAAKI,UAAU,cAAf,UACI,qBAAKC,IAAKN,EAAoBO,IAAKV,EAAOA,MAAOA,IACjD,qBAAIQ,UAAU,eAAd,UAA8BR,EAAM,uBAAMQ,UAAU,cAAhB,cAAgCP,EAAhC,UACpC,oBAAIO,UAAU,gBAAd,SAA+BJ,EAAOO,KAAI,SAACC,EAAOC,GAAR,OAAiB,oBAAIL,UAAU,eAAd,SAAwCI,GAANC,QAC7F,oBAAGL,UAAU,iBAAb,UAA+BN,EAAQY,MAAM,EAAG,KAAhD,iBCoBLC,E,4MApCXR,MAAQ,CACJS,WAAW,EACXC,OAAQ,I,EAGZC,U,sBAAY,8BAAAC,EAAA,sEAOqCC,IAAMC,IAAI,yDAP/C,gBAOgBJ,EAPhB,EAOAK,KAAQA,KAAQL,OACxB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAR3B,2C,kEAaRQ,KAAKN,c,+BAGC,IAAD,EACyBM,KAAKjB,MAA3BS,EADH,EACGA,UAAWC,EADd,EACcA,OAEnB,OAAO,8BAKFD,EAAY,6BAAqBC,EAAON,KAAI,SAAAc,GAAK,OAC9C,cAAC,EAAD,CAAsB1B,GAAI0B,EAAM1B,GAAIC,MAAOyB,EAAMzB,MAAOC,KAAMwB,EAAMxB,KAAMC,QAASuB,EAAMvB,QAASC,mBAAoBsB,EAAMtB,mBAAoBC,OAAQqB,EAAMrB,QAAlJqB,EAAM1B,a,GAhCf2B,IAAMC,WCCVC,MAHf,WACI,OAAO,mECsBIC,E,kLAtBU,IAAD,EACcL,KAAKM,MAA3BC,EADQ,EACRA,SAAUC,EADF,EACEA,aACKC,IAAnBF,EAASxB,OACTyB,EAAQE,KAAK,O,+BAIX,IACEH,EAAaP,KAAKM,MAAlBC,SACYxB,EAAYiB,KAAKM,MAA7BC,SAAYxB,MAEpB,OADA4B,QAAQC,IAAI7B,GACL,8BACH,gCACI,qBAAKE,IAAKF,EAAMJ,mBAAoBO,IAAKH,EAAMP,MAAOA,MAAOO,EAAMP,QACnE,+BAAK+B,EAASxB,MAAMP,MAAM,+BAAO+B,EAASxB,MAAMN,UAChD,4BAAIM,EAAML,UACV,6BAAKK,EAAMH,OAAOO,KAAI,SAACC,EAAOC,GAAR,OAAiB,6BAAeD,GAANC,iB,GAjB3Ca,IAAMC,WCYZU,MAXf,WACI,OACI,gCAGI,cAAC,IAAD,CAAMhC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCUGiC,MAZf,WACI,OACI,eAAC,IAAD,WAEI,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWzB,EAAM0B,OAAO,IACxC,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWZ,IAChC,cAAC,IAAD,CAAOW,KAAK,aAAaC,UAAWX,QCLhDa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.86344f72.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\n\nfunction Movie({ id, title, year, summary, medium_cover_image, genres }) {\n    return (\n        <div>\n            <Link to={{\n                // \"./movie_detail\" 로 큰 따옴표 하거나, ~(역 따옴표) 하면 변수명으로 할 수 있음\n                pathname: `./movie/${id}`,\n                state: {\n                    year,\n                    title,\n                    summary,\n                    medium_cover_image,\n                    genres\n                }\n            }}>\n                <div className=\"movie__data\">\n                    <img src={medium_cover_image} alt={title} title={title} />\n                    <h3 className=\"movie__title\">{title}<span className=\"movie__year\">({year})</span></h3>\n                    <ul className=\"movie__genres\">{genres.map((genre, idx) => (<li className=\"movie__genre\" key={idx}>{genre}</li>))}</ul>\n                    <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\n                </div>\n            </Link>\n        </div>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    medium_cover_image: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Movie;","import React from \"react\"\nimport axios from \"axios\"\nimport Movie from \"../components/Movie\"\n\nclass Home extends React.Component {\n\n    state = {\n        isLoading: true,\n        movies: []\n    };\n\n    getMovies = async () => {\n        //axios : 브라우저와 http 통신을 하기 위한 라이브러리\n        //await : axios 호출이 완료될 때 까지 기다려야 한다. 이 떄 await 키워드는 반드시 async 키워드와 함께 써야 함\n\n        //https://yts.mx/api#list_movies\n        //const movies = await axios.get(\"https://yts.mx/api/v2/list_movies.json\");\n        //console.log(movies.data.data.movies);\n        const { data: { data: { movies } } } = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n        this.setState({ movies, isLoading: false });\n\n    };\n\n    componentDidMount() {\n        this.getMovies();\n    }\n\n    render() {\n        const { isLoading, movies } = this.state;\n\n        return <div>\n            {/* movie=>() 로 할 땐 return 안해도 되고, {}로 감싸면 return statement가 반드시 있어야 함 */}\n            {/* {isLoading ? \"is now loading...🔥\" : movies.map(movie => {\n                return <Movie key={movie.id} id={movie.id} title={movie.title} year={movie.year} summary={movie.summary} medium_cover_image={movie.medium_cover_image} />\n            })} */}\n            {isLoading ? \"Now Loading...🔥\" : movies.map(movie => (\n                <Movie key={movie.id} id={movie.id} title={movie.title} year={movie.year} summary={movie.summary} medium_cover_image={movie.medium_cover_image} genres={movie.genres} />\n            ))}\n        </div>;\n    }\n}\n\nexport default Home;\n","import React from \"react\"\n\nfunction About() {\n    return <span>This is About page📃</span>\n}\nexport default About;","import React from \"react\"\n\nclass Detail extends React.Component {\n    componentDidMount() {\n        const { location, history } = this.props;\n        if (location.state === undefined) {\n            history.push(\"/\");\n        }\n    }\n\n    render() {\n        const { location } = this.props;\n        const { location: { state } } = this.props;\n        console.log(state);\n        return <div>\n            <div>\n                <img src={state.medium_cover_image} alt={state.title} title={state.title} />\n                <h1>{location.state.title}<span>{location.state.year}</span></h1>\n                <p>{state.summary}</p>\n                <ul>{state.genres.map((genre, idx) => (<li key={idx}>{genre}</li>))}</ul>\n            </div>\n        </div >;\n    }\n}\n\nexport default Detail;","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nfunction Navigation() {\n    return (\n        <div>\n            {/* <a> tag를 사용하면 페이지를 refresh해버리기 때문에, Link 사용해야 함 */}\n            {/* <a href=\"/about\">About</a> */}\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/about\">About</Link>\n        </div >\n    )\n}\n\nexport default Navigation;","import React from \"react\"\nimport { HashRouter, Route } from \"react-router-dom\";   //or can use \"BrowserRouter\" rather than HashRouter\nimport Home from \"./routes/Home\"\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App() {\n    return (\n        <HashRouter>\n            {/* Link를 만든 component는 반드시 Router component 안에 있어야 함! (Navigation component는 HashRouter 안에 써야 함) */}\n            <Navigation />\n            <Route path=\"/\" component={Home} exact={true}></Route>\n            <Route path=\"/about\" component={About}></Route>\n            <Route path=\"/movie/:id\" component={Detail}></Route>\n        </HashRouter>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import App from './App2';\nimport App from './App.js';\n\n\n//리액트 애플리케이션은 하나에 한개의 컴포넌트만 rendering할 수 있기때문에 <App /><Potatp /> 로 사용할 수 없음\n// ReactDOM.render(<App2 />, document.getElementById('root'));\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}